[{"C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\App.js":"1","C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\index.js":"2","C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\components\\result.js":"3","C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\components\\form.js":"4","C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\components\\banner.js":"5","C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\redux\\actionTypes.js":"6","C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\redux\\actions.js":"7","C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\redux\\reducers.js":"8","C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\redux\\store.js":"9"},{"size":429,"mtime":1606723077226,"results":"10","hashOfConfig":"11"},{"size":225,"mtime":1606723028250,"results":"12","hashOfConfig":"11"},{"size":1570,"mtime":1606742221839,"results":"13","hashOfConfig":"11"},{"size":5071,"mtime":1607432085901,"results":"14","hashOfConfig":"11"},{"size":530,"mtime":1606657531738,"results":"15","hashOfConfig":"11"},{"size":68,"mtime":1606740390642,"results":"16","hashOfConfig":"11"},{"size":269,"mtime":1606740481572,"results":"17","hashOfConfig":"11"},{"size":519,"mtime":1606740554393,"results":"18","hashOfConfig":"11"},{"size":333,"mtime":1606719000178,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1wb62ck",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\App.js",[],["42","43"],"C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\index.js",[],["44","45"],"C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\components\\result.js",[],"C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\components\\form.js",["46","47","48","49","50"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { compute, reset } from \"../redux/actions\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst formatMoney = (\r\n  amount,\r\n  decimalCount = 2,\r\n  decimal = \".\",\r\n  thousands = \",\"\r\n) => {\r\n  try {\r\n    decimalCount = Math.abs(decimalCount);\r\n    decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\r\n\r\n    const negativeSign = amount < 0 ? \"-\" : \"\";\r\n\r\n    let i = parseInt(\r\n      (amount = Math.abs(Number(amount) || 0).toFixed(decimalCount))\r\n    ).toString();\r\n    let j = i.length > 3 ? i.length % 3 : 0;\r\n\r\n    return (\r\n      negativeSign +\r\n      (j ? i.substr(0, j) + thousands : \"\") +\r\n      i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) +\r\n      (decimalCount\r\n        ? decimal +\r\n          Math.abs(amount - i)\r\n            .toFixed(decimalCount)\r\n            .slice(2)\r\n        : \"\")\r\n    );\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nfunction Form() {\r\n  const dispatch = useDispatch();\r\n\r\n  //   const [watts, setWatts] = useState(\"\");\r\n  //   const [hoursPerDay, setHoursPerDay] = useState(\"\");\r\n  //   const [priceKwh, setPriceKwh] = useState(\"\");\r\n  const [isComputed, setIsComputed] = useState(false);\r\n\r\n  //   const handleCompute = () => {\r\n  //     const wh = watts * hoursPerDay;\r\n  //     const kw = wh / 1000;\r\n  //     const usagePerDay = formatMoney(kw * priceKwh);\r\n  //     const usagePerMonth = formatMoney(kw * 30 * priceKwh);\r\n  //     const usagePerYear = formatMoney(kw * 365 * priceKwh);\r\n\r\n  //     setIsComputed(true);\r\n\r\n  //     return dispatch(\r\n  //       compute({\r\n  //         usagePerDay,\r\n  //         usagePerMonth,\r\n  //         usagePerYear,\r\n  //       })\r\n  //     );\r\n  //   };\r\n\r\n  //   const handleReset = () => {\r\n  //     setWatts(\"\");\r\n  //     setHoursPerDay(\"\");\r\n  //     setPriceKwh(\"\");\r\n  //     setIsComputed(false);\r\n  //     dispatch(reset());\r\n  //   };\r\n\r\n  //formik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      watts: \"\",\r\n      hoursPerDay: \"\",\r\n      priceKwh: \"\",\r\n    },\r\n    validate: (values) => {\r\n      let errors = {};\r\n      if (!values.watts) errors.watts = \"Required\";\r\n      if (!values.hoursPerDay) errors.hoursPerDay = \"Required\";\r\n      if (!values.priceKwh) errors.priceKwh = \"Required\";\r\n      return errors;\r\n    },\r\n    onSubmit: (values) => {\r\n      console.log(\"submit values: \", values);\r\n    },\r\n  });\r\n\r\n  //   const { handleChange, handleSubmit, values } = formik;\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"mt-5\">\r\n          <div className=\"w-full mb-6 md:mb-0\">\r\n            <label\r\n              className=\"block uppercase tracking-wide text-gray-600 text-xs font-bold mb-2\"\r\n              for=\"watts\"\r\n            >\r\n              Watts\r\n            </label>\r\n            <input\r\n              className=\"appearance-none shadow-lg block w-full bg-white text-gray-700 border rounded-lg py-3 px-3 mb-3 leading-tight focus:outline-none focus:bg-white\"\r\n              id=\"watts\"\r\n              type=\"text\"\r\n              value={formik.values.watts}\r\n              onChange={formik.handleChange}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"w-full mb-6 md:mb-0\">\r\n            <label\r\n              className=\"block uppercase tracking-wide text-gray-600 text-xs font-bold mb-2\"\r\n              for=\"hours-use-per-day\"\r\n            >\r\n              Hours use per day\r\n            </label>\r\n            <input\r\n              className=\"appearance-none shadow-lg block w-full bg-white text-gray-700 border rounded-lg py-3 px-3 mb-3 leading-tight focus:outline-none focus:bg-white\"\r\n              id=\"hours-use-per-day\"\r\n              type=\"text\"\r\n              value={formik.values.hoursPerDay}\r\n              onChange={formik.handleChange}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"w-full mb-6 md:mb-0\">\r\n            <label\r\n              className=\"block uppercase tracking-wide text-gray-600 text-xs font-bold mb-2\"\r\n              for=\"pkwh\"\r\n            >\r\n              Price kWh\r\n            </label>\r\n            <input\r\n              className=\"appearance-none shadow-lg block w-full bg-white text-gray-700 border rounded-lg py-3 px-3 mb-3 leading-tight focus:outline-none focus:bg-white\"\r\n              id=\"pkwh\"\r\n              type=\"text\"\r\n              value={formik.values.priceKwh}\r\n              onChange={formik.handleChange}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className={`w-full text-xl text-white rounded-lg font-semibold py-2 px-4 ${\r\n                isComputed\r\n                  ? \"bg-green-500 hover:bg-green-600\"\r\n                  : \"bg-red-500 hover:bg-red-600\"\r\n              }`}\r\n              //   onClick={isComputed ? () => handleReset() : () => handleCompute()}\r\n            >\r\n              {isComputed ? \"Reset\" : \"Compute\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\components\\banner.js",["51"],"import React from \"react\";\r\n\r\nfunction Banner() {\r\n  return (\r\n    <>\r\n      <div className=\"bg-white rounded-lg overflow-hidden shadow-md\">\r\n        <img\r\n          src=\"https://source.unsplash.com/random\"\r\n          className=\"w-full h-44 object-cover\"\r\n          alt=\"image\"\r\n        ></img>\r\n      </div>\r\n      <div className=\"my-3\">\r\n        <p className=\"font-sans text-xl font-medium text-gray-500\">\r\n          Let's compute your electricity usage!\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\redux\\actionTypes.js",[],"C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\redux\\actions.js",[],"C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\redux\\reducers.js",[],"C:\\xampp\\htdocs\\REACT\\electric-usage-calculator\\src\\redux\\store.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":17},{"ruleId":"58","severity":1,"message":"62","line":3,"column":19,"nodeType":"60","messageId":"61","endLine":3,"endColumn":24},{"ruleId":"58","severity":1,"message":"63","line":6,"column":7,"nodeType":"60","messageId":"61","endLine":6,"endColumn":18},{"ruleId":"58","severity":1,"message":"64","line":40,"column":9,"nodeType":"60","messageId":"61","endLine":40,"endColumn":17},{"ruleId":"58","severity":1,"message":"65","line":45,"column":22,"nodeType":"60","messageId":"61","endLine":45,"endColumn":35},{"ruleId":"66","severity":1,"message":"67","line":7,"column":9,"nodeType":"68","endLine":11,"endColumn":10},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"no-unused-vars","'compute' is defined but never used.","Identifier","unusedVar","'reset' is defined but never used.","'formatMoney' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setIsComputed' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]